{"version":3,"sources":["components/Fieldset.js","utils.js","components/CreateBlogPost.js","components/CreateBlogPostModal.js","components/Header.js","components/BlogPost.js","components/BlogsList.js","components/EditBlogPost.js","App.js","serviceWorker.js","reducer.js","store.js","index.js"],"names":["Fieldset","name","label","rest","className","htmlFor","id","component","API_PATH","CreateBlogPost","initialValues","action","inputRef","useRef","dispatch","useDispatch","editId","useSelector","state","blogPosts","find","post","title","Category","author","ImageURL","Description","validationSchema","Yup","shape","required","handlePostAction","values","a","axios","then","response","type","payload","data","catch","error","console","log","handlePutAction","put","handleOnSubmit","resetForm","setFocus","current","focus","onSubmit","onReset","e","render","isSubmitting","handleReset","innerRef","placeholder","disabled","onClick","CreateBlogPostModal","show","showBlogPostPopup","handleClose","Modal","onHide","Header","closeButton","Body","Footer","Button","variant","Navbar","collapseOnSelect","expand","bg","Brand","as","NavLink","to","Toggle","aria-controls","Collapse","Nav","Link","exact","BlogPost","Card","src","alt","data-toggle","handleOnEditClick","defaultProps","BlogsList","useEffect","getPosts","get","map","key","EditBlogPost","App","path","Boolean","window","location","hostname","match","initialState","middlewares","thunk","store","createStore","blogPostList","item","applyMiddleware","subscribe","getState","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f06ee678.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\n\r\nexport function Fieldset({ name, label, ...rest }) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label className=\"mb-0 small text-uppercase text-primary\" htmlFor={name}>\r\n        {label}\r\n      </label>\r\n      <Field id={name} name={name} className=\"form-control\" {...rest} />\r\n      <ErrorMessage name={name} className=\"text-danger small\" component=\"div\" />\r\n    </div>\r\n  );\r\n}\r\n","export const API_PATH =\n  \"https://my-json-server.typicode.com/Srinivasan47/mockjson/posts\";\n","import React, { useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { Fieldset } from \"./Fieldset\";\r\nimport { API_PATH } from \"../utils\";\r\n\r\nconst CreateBlogPost = () => {\r\n  const inputRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const editId = useSelector(state => state.editId);\r\n  const blogPosts = useSelector(state => state.blogPosts);\r\n\r\n  let initialValues;\r\n  let action;\r\n\r\n  if (editId) {\r\n    const selectedBlogPost = blogPosts.find(post => post.id === editId);\r\n    initialValues = selectedBlogPost;\r\n    action = \"PUT\";\r\n  } else {\r\n    initialValues = {\r\n      title: \"\",\r\n      Category: \"\",\r\n      author: \"\",\r\n      ImageURL: \"\",\r\n      Description: \"\"\r\n    };\r\n    action = \"POST\";\r\n  }\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    title: Yup.string().required(\"Title required\"),\r\n    Category: Yup.string().required(\"Category required\"),\r\n    author: Yup.string().required(\"Author required\")\r\n  });\r\n\r\n  async function handlePostAction(values) {\r\n    await axios\r\n      .post(API_PATH, values)\r\n      .then(response => {\r\n        dispatch({ type: \"ADD_BLOG_POST\", payload: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  async function handlePutAction(values) {\r\n    await axios\r\n      .put(`${API_PATH}/${values.id}`, values)\r\n      .then(response => {\r\n        dispatch({ type: \"UPDATE_BLOG_POST\", payload: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    dispatch({ type: \"SHOW_BLOG_POST_POPUP\", payload: false });\r\n    dispatch({ type: \"EDIT_BLOG_POST\", payload: null });\r\n  }\r\n\r\n  const handleOnSubmit = async (values, { resetForm }) => {\r\n    if (action === \"POST\") {\r\n      handlePostAction(values);\r\n    } else if (action === \"PUT\") {\r\n      handlePutAction(values);\r\n    }\r\n    resetForm();\r\n  };\r\n\r\n  const handleOnReset = e => {\r\n    console.log(\"handleOnReset\", e);\r\n    setFocus();\r\n  };\r\n\r\n  const setFocus = () => {\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"my-3 text-center\">Add new blog post</h3>\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleOnSubmit}\r\n        onReset={handleOnReset}\r\n        render={({ isSubmitting, handleReset }) => (\r\n          <Form>\r\n            <Fieldset\r\n              innerRef={inputRef}\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              placeholder=\"Title\"\r\n            />\r\n            <Fieldset name=\"Category\" label=\"Category\" placeholder=\"Category\" />\r\n            <Fieldset name=\"author\" label=\"Author\" placeholder=\"Author\" />\r\n            <Fieldset name=\"ImageURL\" label=\"ImageURL\" placeholder=\"ImageURL\" />\r\n            <Fieldset\r\n              name=\"Description\"\r\n              label=\"Description\"\r\n              placeholder=\"Description\"\r\n            />\r\n            <button type=\"submit\" className=\"btn btn-primary mr-3\">\r\n              Submit\r\n            </button>\r\n            <button\r\n              type=\"reset\"\r\n              className=\"btn btn-warning\"\r\n              disabled={isSubmitting}\r\n              onClick={handleReset}\r\n            >\r\n              Reset\r\n            </button>\r\n          </Form>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateBlogPost;\r\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CreateBlogPost from \"./CreateBlogPost\";\n\nexport default function CreateBlogPostModal() {\n  const dispatch = useDispatch();\n  const show = useSelector(state => state.showBlogPostPopup);\n\n  function handleClose() {\n    dispatch({ type: \"SHOW_BLOG_POST_POPUP\", payload: false });\n    dispatch({ type: \"EDIT_BLOG_POST\", payload: null });\n  }\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          {/* <Modal.Title>Modal heading</Modal.Title> */}\n        </Modal.Header>\n        <Modal.Body>\n          <CreateBlogPost />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport CreateBlogPostModal from \"./CreateBlogPostModal\";\r\n\r\nfunction Header() {\r\n  const dispatch = useDispatch();\r\n\r\n  function handleShow() {\r\n    dispatch({ type: \"SHOW_BLOG_POST_POPUP\", payload: true });\r\n  }\r\n\r\n  return (\r\n    <Navbar\r\n      collapseOnSelect\r\n      expand=\"lg\"\r\n      bg=\"light\"\r\n      variant=\"light\"\r\n      className=\"mb-3\"\r\n    >\r\n      <Navbar.Brand as={NavLink} to=\"/\">\r\n        Blog\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link exact as={NavLink} to=\"/\">\r\n            Blog List\r\n          </Nav.Link>\r\n          {/* <Nav.Link as={NavLink} to=\"/add\">\r\n\t\t\t\t\t\tAdd new post\r\n\t\t\t\t\t</Nav.Link> */}\r\n          <Button variant=\"primary\" onClick={handleShow}>\r\n            Add new post\r\n          </Button>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n      <CreateBlogPostModal />\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { Card } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction BlogPost({ Category, title, ImageURL, author, Description, id }) {\n  const dispatch = useDispatch();\n\n  function handleOnEditClick(id) {\n    dispatch({ type: \"EDIT_BLOG_POST\", payload: id });\n    dispatch({ type: \"SHOW_BLOG_POST_POPUP\", payload: true });\n  }\n\n  return (\n    <Card className=\"mb-5\">\n      <Card.Body>\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <img src={ImageURL} alt={Category} />\n          </div>\n          <div className=\"col-9\">\n            <h4>{title}</h4>\n            <div>{Description}</div>\n            <div className=\"d-flex justify-content-between my-2\">\n              <div className=\"d-flex justify-content-start\">\n                <span\n                  className=\"badge badge-warning mr-2\"\n                  data-toggle=\"tooltip\"\n                  title=\"Category\"\n                >\n                  {Category}\n                </span>\n                <span\n                  className=\"badge badge-info\"\n                  data-toggle=\"tooltip\"\n                  title=\"Author name\"\n                >\n                  {author}\n                </span>\n              </div>\n            </div>\n            {/* <div>\n\t\t\t\t\t\t\t<Link to={`/edit/${id}`}>Edit</Link>\n\t\t\t\t\t\t</div> */}\n            <div>\n              <Button\n                className=\"p-0\"\n                onClick={() => handleOnEditClick(id)}\n                variant=\"link\"\n              >\n                Edit\n              </Button>\n            </div>\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n}\n\nBlogPost.defaultProps = {\n  Category: \"\",\n  title: \"\",\n  ImageURL: \"\",\n  author: \"\",\n  Description: \"\"\n};\n\nBlogPost.propTypes = {\n  Category: PropTypes.string,\n  title: PropTypes.string,\n  ImageURL: PropTypes.string,\n  author: PropTypes.string,\n  Description: PropTypes.string\n};\n\nexport default BlogPost;\n","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport BlogPost from \"./BlogPost\";\r\nimport { API_PATH } from \"../utils\";\r\n\r\nexport default function BlogsList() {\r\n  const dispatch = useDispatch();\r\n  const blogPosts = useSelector(state => state.blogPosts);\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, []);\r\n\r\n  const getPosts = () => {\r\n    // setLoader(true);\r\n    axios\r\n      .get(API_PATH)\r\n      .then(response => {\r\n        dispatch({ type: \"LIST_BLOG_POSTS\", payload: response.data });\r\n        // handle success\r\n      })\r\n      .catch(error => {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className=\"container-fluid\">\r\n      {blogPosts && blogPosts.map(post => <BlogPost key={post.id} {...post} />)}\r\n    </section>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\n\r\nexport default function EditBlogPost() {\r\n  useEffect(() => {\r\n    // get particular dat\r\n  }, []);\r\n\r\n  return <div>EditBlogPost</div>;\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/Header\";\nimport BlogsList from \"./components/BlogsList\";\nimport EditBlogPost from \"./components/EditBlogPost\";\nimport CreateBlogPost from \"./components/CreateBlogPost\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Header />\n        <Switch>\n          <Route path=\"/edit/:id\">\n            <EditBlogPost />\n          </Route>\n          <Route path=\"/add\">\n            <div className=\"row d-flex justify-content-center\">\n              <div className=\"col-4\">\n                <CreateBlogPost />\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/\">\n            <BlogsList />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n\tblogPosts: [],\r\n\teditId: null,\r\n\tshowBlogPostPopup: false\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n\tif (action.type === 'LIST_BLOG_POSTS') {\r\n\t\treturn { ...state, blogPosts: action.payload };\r\n\t} else if (action.type === 'ADD_BLOG_POST') {\r\n\t\treturn { ...state, blogPosts: [...state.blogPosts, action.payload] };\r\n\t} else if (action.type === 'UPDATE_BLOG_POST') {\r\n\t\tconst blogPostList = state.blogPosts.map(item => {\r\n\t\t\tif (item.id === action.payload.id) {\r\n\t\t\t\treturn action.payload;\r\n\t\t\t}\r\n\t\t\treturn item;\r\n\t\t});\r\n\t\treturn { ...state, blogPosts: blogPostList };\r\n\t} else if (action.type === 'EDIT_BLOG_POST') {\r\n\t\treturn { ...state, editId: action.payload };\r\n\t} else if (action.type === 'SHOW_BLOG_POST_POPUP') {\r\n\t\treturn { ...state, showBlogPostPopup: action.payload };\r\n\t} else {\r\n\t\treturn state;\r\n\t}\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducer';\r\n\r\nconst middlewares = [thunk];\r\n\r\n// STORE\r\nconst store = createStore(\r\n    reducer,\r\n    applyMiddleware(...middlewares)\r\n);\r\n\r\nstore.subscribe(()=>{\r\n    console.log(store.getState());\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}